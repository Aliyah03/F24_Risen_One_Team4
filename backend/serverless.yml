service: senior-project-template

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1

plugins:
  - serverless-offline

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    TimesheetTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: timesheet
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    dynamoUser:
      Type: AWS::IAM::Role
      Properties:
        RoleName: DynamoRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: usersDynamoPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DeleteItem
                  Resource:
                    - Fn::GetAtt: [TimesheetTable, Arn]

functions:
  login:
    handler: src/handlers/login.handler
    events:
      - http:
          path: login
          method: post
          cors: true

  createOrUpdateTimesheet:
    handler: src/handlers/timesheet.createOrUpdateTimesheet
    role: dynamoUser
    events:
      - http:
          path: timesheet
          method: post
          cors: true
          role: dynamoUser

  getTimesheet:
    handler: src/handlers/timesheet.getTimesheet
    events:
      - http:
          path: timesheet/{username}
          method: get
          cors: true
          request:
            parameters:
              paths:
                username: true

  checkUserExists:
    handler: src/handlers/timesheet.checkUserExists
    events:
      - http:
          path: timesheet/check/{username}
          method: get
          cors: true
          request:
            parameters:
              paths:
                username: true

  